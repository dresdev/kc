class HomeStorage{static getContinueWatchingList(){var t=localStorage.getItem("continueWatching");return t?JSON.parse(t):[]}static getMyList(){var t=localStorage.getItem("myList");return t?JSON.parse(t):[]}static isInMyList(e){return this.getMyList().some(t=>t.id===e)}static addToMyList(t){var e=this.getMyList();return!this.isInMyList(t.id)&&(t={id:t.id,title:t.title,poster:t.poster,heroImage:t.heroImage,languages:t.languages,addedAt:Date.now()},e.push(t),localStorage.setItem("myList",JSON.stringify(e)),!0)}static removeFromMyList(e){var t=this.getMyList(),i=t.filter(t=>t.id!==e);return localStorage.setItem("myList",JSON.stringify(i)),i.length!==t.length}static toggleMyList(t){return this.isInMyList(t.id)?{action:"removed",success:this.removeFromMyList(t.id)}:{action:"added",success:this.addToMyList(t)}}}const DEFAULT_MOCK_DATA={top10:[{id:"snk",title:"Attack on Titan",image:"https://image.tmdb.org/t/p/w500/hqRb1wyIVsaMukZElPBUXoJPqrR.jpg",year:2013,rating:"TV-MA",position:1,languages:"Lat | Sub"},{id:"sakamotoda",title:"Sakamoto Days",image:"https://image.tmdb.org/t/p/w500/pGucjuHJYgJQQ1OaRqf550kRTA.jpg",year:2024,rating:"TV-14",position:2,languages:"Sub"},{id:"dandadan",title:"Dan Da Dan",image:"https://image.tmdb.org/t/p/w500/qU12CrNOYdxwlx7wvrhpgo2q1XQ.jpg",year:2024,rating:"TV-MA",position:3,languages:"Lat"},{id:"hunterxhunter",title:"Hunter x Hunter",image:"https://image.tmdb.org/t/p/w500/ucpgmUR1h5Te1BYegKItoPjOeF7.jpg",year:1999,rating:"TV-MA",position:4,languages:"Lat | Sub"},{id:"fullmetalalchemist",title:"Fullmetal Alchemist: Brotherhood",image:"https://image.tmdb.org/t/p/w500/kjoGxuVepL2mFTUtdMGF6VvRv25.jpg",year:2021,rating:"TV-MA",position:5,languages:"Sub"},{id:"onepunchman",title:"One Punch Man",image:"https://image.tmdb.org/t/p/w500/dT10AxJIXVvRwFAew4tt2RhzJrD.jpg",year:2022,rating:"TV-14",position:6,languages:"Lat"}],anime:[{id:"onepunchman",title:"One Punch Man",image:"https://image.tmdb.org/t/p/w500/9vo4DnhsAvOCRa2Xk0isavDp8eu.jpg",year:2015,rating:"TV-MA",languages:"Lat | Sub"}]};function getMockData(){return"undefined"!=typeof MOCK_DATA?MOCK_DATA:DEFAULT_MOCK_DATA}class Slider{constructor(t,e=6){this.container=t,this.track=t.querySelector(".slider-track"),this.prevBtn=t.querySelector(".prev-btn"),this.nextBtn=t.querySelector(".next-btn"),this.itemsPerView=e,this.currentIndex=0,this.itemWidth=0,this.maxIndex=0,this.init()}init(){this.calculateDimensions(),this.setupEventListeners(),this.updateButtons(),window.addEventListener("resize",()=>{this.calculateDimensions(),this.updatePosition()})}calculateDimensions(){var t,e=this.track.children;0!==e.length&&(t=this.container.querySelector(".slider-container").offsetWidth,e=e.length,window.innerWidth<=480?this.itemsPerView=2.5:this.itemsPerView=window.innerWidth<=768?3.5:window.innerWidth<=1024?4.5:6,this.itemWidth=t/this.itemsPerView,this.maxIndex=Math.max(0,e-this.itemsPerView),this.currentIndex=Math.min(this.currentIndex,this.maxIndex))}setupEventListeners(){this.prevBtn?.addEventListener("click",()=>this.prev()),this.nextBtn?.addEventListener("click",()=>this.next())}prev(){0<this.currentIndex&&(this.currentIndex=Math.max(0,this.currentIndex-this.itemsPerView),this.updatePosition())}next(){this.currentIndex<this.maxIndex&&(this.currentIndex=Math.min(this.maxIndex,this.currentIndex+this.itemsPerView),this.updatePosition())}updatePosition(){var t=-this.currentIndex*this.itemWidth;this.track.style.transform=`translateX(${t}px)`,this.updateButtons()}updateButtons(){this.prevBtn&&this.nextBtn&&(this.prevBtn.style.opacity=0<this.currentIndex?"1":"0",this.nextBtn.style.opacity=this.currentIndex<this.maxIndex?"1":"0")}}class ContentRenderer{static renderContinueWatching(){var t=HomeStorage.getContinueWatchingList(),e=document.getElementById("continueWatchingSection");const i=document.getElementById("continueWatchingSlider");0===t.length?e.style.display="none":(e.style.display="block",i.innerHTML="",t.forEach(t=>{t=this.createContinueWatchingCard(t),i.appendChild(t)}),new Slider(e.querySelector(".content-slider")))}static createContinueWatchingCard(t){var e=document.createElement("a");return e.className="continue-card",e.href="go:"+t.serieId,e.style.textDecoration="none",e.style.color="inherit",e.innerHTML=`
      <img src="${t.episodeThumbnail||t.seriePoster}" alt="${t.serieTitle}" class="continue-card-image">
      <div class="continue-card-overlay">
        <span class="material-symbols-outlined play-icon">play_arrow</span>
      </div>
      <div class="continue-progress">
        <div class="continue-progress-fill" style="width: ${t.progress||0}%"></div>
      </div>
      <div class="continue-info">
        <div class="continue-title">${t.serieTitle}</div>
        <div class="continue-episode">T${t.season}E${t.episode}</div>
      </div>
    `,e}static renderTop10(){const e=document.getElementById("top10Slider");e.innerHTML="",getMockData().top10.forEach(t=>{t=this.createTop10Card(t),e.appendChild(t)}),new Slider(document.querySelector("#top10Slider").closest(".content-slider"))}static createTop10Card(t){var e=document.createElement("a");return e.className="top10-card content-card",e.href="go:"+t.id,e.style.textDecoration="none",e.style.color="inherit",e.innerHTML=`
      <div class="top10-number">#${t.position}</div>
      <img src="${t.image}" alt="${t.title}" class="card-image">
    `,e}static renderSection(t,e){const i=document.getElementById(t);i.innerHTML="",e.forEach(t=>{t=this.createContentCard(t),i.appendChild(t)}),new Slider(document.querySelector("#"+t).closest(".content-slider"))}static createContentCard(t){var e=document.createElement("a"),i=(e.className="content-card",e.href=t.id?"go:"+t.id:"#!",e.style.textDecoration="none",e.style.color="inherit",t.poster||t.image);return e.innerHTML=`
      <img src="${i}" alt="${t.title}" class="card-image">
      <div class="card-info">
        <div class="card-title">${t.title}</div>
        <div class="card-audio">${t.languages||"Lat | Sub"}</div>
      </div>
    `,e}static createMyListCard(t){var e=document.createElement("a");return e.className="content-card",e.href="go:"+t.id,e.style.textDecoration="none",e.style.color="inherit",e.innerHTML=`
      <img src="${t.poster}" alt="${t.title}" class="card-image">
      <div class="card-info">
        <div class="card-title">${t.title}</div>
      </div>
    `,e}static renderMyList(){var t=HomeStorage.getMyList(),e=document.getElementById("myListSection");const i=document.getElementById("myListSlider");0===t.length?e.style.display="none":(e.style.display="block",i.innerHTML="",t.forEach(t=>{t=this.createMyListCard(t),i.appendChild(t)}),new Slider(e.querySelector(".content-slider")))}static initHeroSection(){var t=document.querySelector(".play-btn");const e=document.querySelector("#heroAddToListBtn");t?.addEventListener("click",()=>{console.log("Play hero content")}),e?.addEventListener("click",()=>{var t={id:e.dataset.serieId,title:e.dataset.title,poster:e.dataset.poster,heroImage:e.dataset.heroImage,languages:e.dataset.languages},t=HomeStorage.toggleMyList(t);t.success&&(this.updateAddToListButtonState(e,"added"===t.action),this.renderMyList())}),e&&(t=HomeStorage.isInMyList(e.dataset.serieId),this.updateAddToListButtonState(e,t))}static updateAddToListButtonState(t,e){e?t.classList.add("in-list"):t.classList.remove("in-list")}static initAllSections(){console.log("ðŸŽ¬ Initializing content sections...");var t="undefined"!=typeof CONTENT_SECTIONS_CONFIG?CONTENT_SECTIONS_CONFIG:[{id:"continueWatching",method:"renderContinueWatching",enabled:!0},{id:"top10",method:"renderTop10",enabled:!0},{id:"anime",method:"renderSection",sliderId:"animeSlider",dataSource:"MOCK_DATA.anime",enabled:!0},{id:"myList",method:"renderMyList",enabled:!0}];this.initHeroSection(),t.forEach(t=>{if(t.enabled)switch(t.method){case"renderContinueWatching":this.renderContinueWatching();break;case"renderTop10":this.renderTop10();break;case"renderSection":var e;t.sliderId&&t.dataSource&&(e=this.getDataFromSource(t.dataSource),this.renderSection(t.sliderId,e));break;case"renderMyList":this.renderMyList();break;default:console.warn("Unknown section method: "+t.method)}}),console.log("âœ… Content sections initialized!")}static getDataFromSource(e){try{var t;return e.startsWith("MOCK_DATA.")?(t=e.replace("MOCK_DATA.",""),getMockData()[t]||[]):[]}catch(t){return console.warn("Error getting data from source: "+e,t),[]}}}function handleContinueWatching(t){console.log("Continue watching:",t),console.log(`Continuar viendo ${t.serieTitle} - T${t.season}E`+t.episode)}function handleContentClick(t){console.log("Content clicked:",t),console.log("Ver detalles de: "+t.title)}window.handleContinueWatching=handleContinueWatching,window.handleContentClick=handleContentClick,window.addEventListener("resize",()=>{clearTimeout(window.resizeTimeout),window.resizeTimeout=setTimeout(()=>{document.querySelectorAll(".content-slider").forEach(t=>{new Slider(t)})},250)});